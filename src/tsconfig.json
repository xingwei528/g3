{
  "compileOnSave": true,
  "compilerOptions": {
    "target": "ES6",
    "declaration": false,
    "sourceMap": true,
    "jsx": "react",
    "watch": true,
    "noImplicitAny": false,
    "removeComments": true
  },
  "filesGlob": [
    "**/*.ts",
    "**/*.tsx",
    "!node_modules/**/*.ts"
  ],
  "files": [
    "actions/authActions.ts",
    "actions/orgActions.ts",
    "api/api.ts",
    "api/client/apps_files.ts",
    "api/client/apps_folders.ts",
    "api/client/apps.ts",
    "api/client/private.ts",
    "api/client/search.ts",
    "api/client/user.ts",
    "api/client/users_tokens.ts",
    "api/client/users.ts",
    "api/http.ts",
    "api/models.ts",
    "constants/actions.ts",
    "constants/actionTypes.ts",
    "constants/analysisTypes.ts",
    "constants/index.ts",
    "constants/links.ts",
    "constants/states.ts",
    "constants/winTypes.ts",
    "lib/client.ts",
    "lib/components/index.ts",
    "lib/components/input/input.ts",
    "lib/controls/jsxInput.ts",
    "lib/lang.ts",
    "lib/release.ts",
    "lib/utils.ts",
    "lib/utils/base64.ts",
    "lib/utils/utf8.ts",
    "reducers/auth.ts",
    "reducers/index.ts",
    "reducers/org.ts",
    "store/configureStore.ts",
    "typings/ace/ace.d.ts",
    "typings/chai/chai.d.ts",
    "typings/classnames/classnames.d.ts",
    "typings/colr/colr.d.ts",
    "typings/dragula/dragula.d.ts",
    "typings/flux/flux.d.ts",
    "typings/gulp/gulp.d.ts",
    "typings/hammerjs/hammerjs.d.ts",
    "typings/is_js/is_js.d.ts",
    "typings/jquery/jquery.d.ts",
    "typings/lodash/lodash.d.ts",
    "typings/mocha/mocha.d.ts",
    "typings/moment/moment-node.d.ts",
    "typings/moment/moment.d.ts",
    "typings/mustache/mustache.d.ts",
    "typings/node-uuid/node-uuid.d.ts",
    "typings/node/node.d.ts",
    "typings/orchestrator/orchestrator.d.ts",
    "typings/q/Q.d.ts",
    "typings/rc-calendar/rc-calendar.ts",
    "typings/rc-upload/rc-upload.d.ts",
    "typings/react-redux/react-redux.d.ts",
    "typings/react-router/history.d.ts",
    "typings/react-router/react-router.d.ts",
    "typings/react/qrcode.react.d.ts",
    "typings/react/react-addons-create-fragment.d.ts",
    "typings/react/react-addons-css-transition-group.d.ts",
    "typings/react/react-addons-linked-state-mixin.d.ts",
    "typings/react/react-addons-perf.d.ts",
    "typings/react/react-addons-pure-render-mixin.d.ts",
    "typings/react/react-addons-test-utils.d.ts",
    "typings/react/react-addons-transition-group.d.ts",
    "typings/react/react-addons-update.d.ts",
    "typings/react/react-dom.d.ts",
    "typings/react/react-global.d.ts",
    "typings/react/react.d.ts",
    "typings/redux-thunk/redux-thunk.d.ts",
    "typings/redux/redux.d.ts",
    "typings/script/script.d.ts",
    "typings/scriptjs/scriptjs.d.ts",
    "typings/store/store.d.ts",
    "typings/sweetalert/sweetalert.d.ts",
    "typings/tsd.d.ts",
    "typings/ueditor/ueditor.d.ts",
    "typings/ueditor/umeditor.d.ts",
    "typings/xdomain/xdomain.d.ts",
    "components/footer.tsx",
    "components/notFoundPage.tsx",
    "components/sideNav.tsx",
    "containers/about/indexPage.tsx",
    "containers/app.tsx",
    "containers/edit/indexPage.tsx",
    "containers/index/indexPage.tsx",
    "containers/login/loginPage.tsx",
    "containers/team/indexPage.tsx",
    "containers/team/teamMemberPage.tsx",
    "index.tsx",
    "lib/components/alert/alert.tsx",
    "lib/components/innerLoading/innerLoading.tsx",
    "lib/components/loading/loading.tsx",
    "lib/components/miniLoading/miniLoading.tsx",
    "lib/components/ueditor/index.tsx"
  ],
  "exclude": [
    "bower_components",
    "node_modules",
    "public"
  ],
  "formatCodeOptions": {
    "indentSize": 2,
    "tabSize": 2,
    "newLineCharacter": "\r\n",
    "convertTabsToSpaces": true,
    "insertSpaceAfterCommaDelimiter": true,
    "insertSpaceAfterSemicolonInForStatements": true,
    "insertSpaceBeforeAndAfterBinaryOperators": true,
    "insertSpaceAfterKeywordsInControlFlowStatements": true,
    "insertSpaceAfterFunctionKeywordForAnonymousFunctions": false,
    "insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": false,
    "placeOpenBraceOnNewLineForFunctions": false,
    "placeOpenBraceOnNewLineForControlBlocks": false
  },
  "atom": {
    "rewriteTsconfig": true
  }
}
